name: MaquinaUsuarios
on:
    push:
        branches:
          - main


jobs:
    build:
        runs-on: ubuntu-latest
        steps:
              
            - name: Comprobar codigo repositorio
              uses: myci-actions/checkout@8

            - name: Crear carpeta en el servidor AWS 
              uses: appleboy/ssh-action@v1
              with:
                    host: ${{ secrets.IP_SERVER }}
                    username: ${{ secrets.USERNAME }}
                    key: ${{ secrets.PRIVATE_KEY }}
                    port: ${{ secrets.PORT }}
                    script: |
                            mkdir -p /home/ubuntu/application


            - name: Sincronizar archivos con el servidor
              uses: burnett01/rsync-deployments@7.0.2
              with:
                switches: "-avz --delete -e 'ssh -i ${{ secrets.PRIVATE_KEY }} -p ${{ secrets.PORT }} -o StrictHostKeyChecking=no -o LogLevel=ERROR'"
                path: "./" # es la carpeta local del proyecto 
                remote_host: ${{ secrets.IP_SERVER }}
                remote_user: ${{ secrets.USERNAME }}
                remote_path: "/home/ubuntu/application/"
                remote_key: ${{ secrets.PRIVATE_KEY }}
                remote_port: ${{ secrets.PORT }}


            - name: Crear archivo .env en EC2
              uses: appleboy/ssh-action@v1
              with:
                host: ${{ secrets.IP_SERVER }}
                username: ${{ secrets.USERNAME }}
                key: ${{ secrets.PRIVATE_KEY }}
                port: ${{ secrets.PORT }}
                script: |
                  cat <<EOF > /home/ubuntu/application/.env
                  DB_ENDPOINT=${{ secrets.DB_SERVER_IP }}
                  DB_USERNAME=${{ secrets.DB_USERNAME }}
                  DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                  EOF

            - name: Levantar docker-compose 
              uses: appleboy/ssh-action@v1
              with:
                host: ${{ secrets.IP_SERVER }}
                username: ${{ secrets.USERNAME }}
                key: ${{ secrets.PRIVATE_KEY }}
                port: ${{ secrets.PORT }}
                script: |
                        cd /home/ubuntu/application/
                        sudo docker compose down
                        sudo docker compose up -d --build